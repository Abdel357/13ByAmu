{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from \"src/environment/environment\";\nlet ForumComponent = class ForumComponent {\n  constructor(forumservice, router, toastr, http, connectionService) {\n    this.forumservice = forumservice;\n    this.router = router;\n    this.toastr = toastr;\n    this.http = http;\n    this.connectionService = connectionService;\n    this.url_publication = environment.api_url + \"/publication\";\n    this.url_comment = environment.api_url + \"/comment\";\n    this.publications = [];\n    this.comments = [];\n    this.publicationForm = new FormGroup({\n      title: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\n      publication: new FormControl(\"\", [Validators.required, Validators.minLength(10)])\n    });\n    this.commentForm = new FormGroup({\n      comment: new FormControl(\"\", [Validators.required, Validators.minLength(10)])\n    });\n    this.showForm = false;\n    this.title = \"\";\n    this.publication = \"\";\n    this.selectedPublication = null;\n    this.getWeek = function () {\n      const date = new Date(this.getTime());\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() + 4 - (date.getDay() || 7));\n      const yearStart = new Date(date.getFullYear(), 0, 1);\n      const weekNo = Math.ceil(((date - yearStart) / 86400000 + 1) / 7);\n      return weekNo;\n    };\n  }\n  ngOnInit() {\n    this.connectionService.isUserLoggedIn$.subscribe(loggedIn => this.isLoggedIn = loggedIn);\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/log\"]);\n    }\n    this.getPublications();\n    this.getComments();\n  }\n  getPublications() {\n    this.http.get(this.url_publication).subscribe(publicationsWithUserInfo => {\n      this.publications = publicationsWithUserInfo;\n      console.log(this.publications);\n    }, error => {\n      console.error(error);\n    });\n  }\n  getComments() {\n    this.http.get(this.url_comment).subscribe(comments => {\n      this.comments = comments;\n      console.log(this.comments);\n    }, error => {\n      console.error(error);\n    });\n  }\n  submit() {\n    const value = this.publicationForm.value;\n    this.forumservice.poste(value).subscribe(res => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Publication ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n  submitComment(idPublication) {\n    const value = this.commentForm.value;\n    this.forumservice.posteComment(value, idPublication).subscribe(res => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Commentaire ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n  cancelForm() {\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n  openPopup(publication) {\n    this.selectedPublication = publication;\n  }\n  closePopup() {\n    this.selectedPublication = null;\n  }\n  filterByDate(selectedValue) {\n    if (selectedValue === 'all') {\n      // Show all publications\n      this.publications.forEach(publication => {\n        publication.show = true;\n      });\n    } else if (selectedValue === 'week') {\n      // Show publications for this week\n      const currentDate = new Date();\n      const currentWeek = currentDate.getWeek();\n      this.publications.forEach(publication => {\n        const publicationDate = new Date(publication.datePublication);\n        const publicationWeek = publicationDate.getWeek();\n        publication.show = publicationWeek === currentWeek;\n      });\n    } else if (selectedValue === 'month') {\n      // Show publications for this month\n      const currentDate = new Date();\n      const currentMonth = currentDate.getMonth();\n      this.publications.forEach(publication => {\n        const publicationDate = new Date(publication.datePublication);\n        const publicationMonth = publicationDate.getMonth();\n        publication.show = publicationMonth === currentMonth;\n      });\n    } else if (selectedValue === 'year') {\n      // Show publications for this year\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n      this.publications.forEach(publication => {\n        const publicationDate = new Date(publication.datePublication);\n        const publicationYear = publicationDate.getFullYear();\n        publication.show = publicationYear === currentYear;\n      });\n    }\n  }\n  filterByType(selectedValue) {\n    const sessionData = JSON.parse(sessionStorage.getItem(\"sessionData\") || \"{}\");\n    const userId = sessionData.idUser;\n    if (selectedValue === \"all\") {\n      // Show all publications\n      this.publications.forEach(publication => {\n        publication.show = true;\n      });\n    } else if (selectedValue === \"my\") {\n      // Show only user's publications\n      this.publications.forEach(publication => {\n        publication.show = publication.idUser === userId;\n      });\n    }\n  }\n};\nForumComponent = __decorate([Component({\n  selector: \"app-forum\",\n  templateUrl: \"./forum.component.html\",\n  styleUrls: [\"./forum.component.css\"]\n})], ForumComponent);\nexport { ForumComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","environment","ForumComponent","constructor","forumservice","router","toastr","http","connectionService","url_publication","api_url","url_comment","publications","comments","publicationForm","title","required","minLength","publication","commentForm","comment","showForm","selectedPublication","getWeek","date","Date","getTime","setHours","setDate","getDate","getDay","yearStart","getFullYear","weekNo","Math","ceil","ngOnInit","isUserLoggedIn$","subscribe","loggedIn","isLoggedIn","navigate","getPublications","getComments","get","publicationsWithUserInfo","console","log","error","submit","value","poste","res","success","redirectUrl","setTimeout","location","reload","submitComment","idPublication","posteComment","cancelForm","openPopup","closePopup","filterByDate","selectedValue","forEach","show","currentDate","currentWeek","publicationDate","datePublication","publicationWeek","currentMonth","getMonth","publicationMonth","currentYear","publicationYear","filterByType","sessionData","JSON","parse","sessionStorage","getItem","userId","idUser","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Youssef EL-HAMRANI\\Desktop\\Node js\\NEW PFE\\project_pfe-frontend\\frontend\\src\\app\\components\\forum\\forum.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ForumService } from \"src/app/services/forum.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { environment } from \"src/environment/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ConnectionService } from \"src/app/services/connection.service\";\n\n@Component({\n  selector: \"app-forum\",\n  templateUrl: \"./forum.component.html\",\n  styleUrls: [\"./forum.component.css\"],\n})\nexport class ForumComponent implements OnInit {\n  url_publication = environment.api_url + \"/publication\";\n  url_comment = environment.api_url + \"/comment\";\n\n  isLoggedIn!: boolean;\n\n  publications: any[] = [];\n  comments: any[] = [];\n\n  publicationForm: FormGroup = new FormGroup({\n    title: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\n    publication: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(10),\n    ]),\n  });\n\n  commentForm: FormGroup = new FormGroup({\n    comment: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(10),\n    ]),\n  });\n\n  constructor(\n    private forumservice: ForumService,\n    private router: Router,\n    private toastr: ToastrService,\n    private http: HttpClient,\n    private connectionService: ConnectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.connectionService.isUserLoggedIn$.subscribe(\n      (loggedIn) => (this.isLoggedIn = loggedIn)\n    );\n\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/log\"]);\n    }\n\n    this.getPublications();\n    this.getComments();\n  }\n\n  getPublications(): void {\n    this.http.get<any[]>(this.url_publication).subscribe(\n      (publicationsWithUserInfo) => {\n        this.publications = publicationsWithUserInfo;\n        console.log(this.publications);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  getComments() {\n    this.http.get<any[]>(this.url_comment).subscribe(\n      (comments) => {\n        this.comments = comments;\n        console.log(this.comments);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  submit() {\n    const value = this.publicationForm.value;\n    this.forumservice.poste(value).subscribe((res) => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Publication ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n\n  submitComment(idPublication: number) {\n    const value = this.commentForm.value;\n    this.forumservice.posteComment(value, idPublication).subscribe((res) => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Commentaire ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n\n  showForm = false;\n  title = \"\";\n  publication = \"\";\n\n  cancelForm(): void {\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n\n  selectedPublication: any = null;\n  openPopup(publication: any): void {\n    this.selectedPublication = publication;\n  }\n\n  closePopup(): void {\n    this.selectedPublication = null;\n  }\n\n// Helper function to get the week number\nDate.prototype.getWeek = function() {\n  const date = new Date(this.getTime());\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + 4 - (date.getDay() || 7));\n  const yearStart = new Date(date.getFullYear(), 0, 1);\n  const weekNo = Math.ceil(((date - yearStart) / 86400000 + 1) / 7);\n  return weekNo;\n};\n\nfilterByDate(selectedValue: string) {\n  if (selectedValue === 'all') {\n    // Show all publications\n    this.publications.forEach(publication => {\n      publication.show = true;\n    });\n  } else if (selectedValue === 'week') {\n    // Show publications for this week\n    const currentDate = new Date();\n    const currentWeek = currentDate.getWeek();\n    this.publications.forEach(publication => {\n      const publicationDate = new Date(publication.datePublication);\n      const publicationWeek = publicationDate.getWeek();\n      publication.show = publicationWeek === currentWeek;\n    });\n  } else if (selectedValue === 'month') {\n    // Show publications for this month\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    this.publications.forEach(publication => {\n      const publicationDate = new Date(publication.datePublication);\n      const publicationMonth = publicationDate.getMonth();\n      publication.show = publicationMonth === currentMonth;\n    });\n  } else if (selectedValue === 'year') {\n    // Show publications for this year\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    this.publications.forEach(publication => {\n      const publicationDate = new Date(publication.datePublication);\n      const publicationYear = publicationDate.getFullYear();\n      publication.show = publicationYear === currentYear;\n    });\n  }\n}\n\n\n  filterByType(selectedValue: string) {\n    const sessionData = JSON.parse(\n      sessionStorage.getItem(\"sessionData\") || \"{}\"\n    );\n    const userId = sessionData.idUser;\n\n    if (selectedValue === \"all\") {\n      // Show all publications\n      this.publications.forEach((publication) => {\n        publication.show = true;\n      });\n    } else if (selectedValue === \"my\") {\n      // Show only user's publications\n      this.publications.forEach((publication) => {\n        publication.show = publication.idUser === userId;\n      });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}