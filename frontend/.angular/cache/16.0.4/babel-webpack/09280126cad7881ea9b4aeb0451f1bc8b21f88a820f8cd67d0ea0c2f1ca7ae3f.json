{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from \"src/environment/environment\";\nlet ForumComponent = class ForumComponent {\n  constructor(forumservice, router, toastr, http, connectionService) {\n    this.forumservice = forumservice;\n    this.router = router;\n    this.toastr = toastr;\n    this.http = http;\n    this.connectionService = connectionService;\n    this.url = environment.api_url + \"/publication\";\n    this.publications = [];\n    this.publicationForm = new FormGroup({\n      title: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\n      publication: new FormControl(\"\", [Validators.required, Validators.minLength(10)])\n    });\n    this.showForm = false;\n    this.title = \"\";\n    this.publication = \"\";\n    this.selectedPublication = null;\n  }\n  ngOnInit() {\n    this.connectionService.isUserLoggedIn$.subscribe(loggedIn => this.isLoggedIn = loggedIn);\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/log\"]);\n    }\n    this.getPublications();\n  }\n  getPublications() {\n    this.http.get(this.url).subscribe(publicationsWithUserInfo => {\n      this.publications = publicationsWithUserInfo;\n    }, error => {\n      console.error(error);\n    });\n  }\n  submit() {\n    const value = this.publicationForm.value;\n    this.forumservice.poste(value).subscribe(res => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Publication ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n  submitForm() {\n    // Handle form submission\n    console.log(\"Title:\", this.title);\n    console.log(\"Publication:\", this.publication);\n    // Reset form values and hide the form\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n  cancelForm() {\n    // Reset form values and hide the form\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n  openPopup(publication) {\n    this.selectedPublication = publication;\n  }\n  closePopup() {\n    this.selectedPublication = null;\n  }\n};\nForumComponent = __decorate([Component({\n  selector: \"app-forum\",\n  templateUrl: \"./forum.component.html\",\n  styleUrls: [\"./forum.component.css\"]\n})], ForumComponent);\nexport { ForumComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","environment","ForumComponent","constructor","forumservice","router","toastr","http","connectionService","url","api_url","publications","publicationForm","title","required","minLength","publication","showForm","selectedPublication","ngOnInit","isUserLoggedIn$","subscribe","loggedIn","isLoggedIn","navigate","getPublications","get","publicationsWithUserInfo","error","console","submit","value","poste","res","success","redirectUrl","setTimeout","location","reload","submitForm","log","cancelForm","openPopup","closePopup","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Youssef EL-HAMRANI\\Desktop\\Node js\\NEW PFE\\project_pfe-frontend\\frontend\\src\\app\\components\\forum\\forum.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ForumService } from \"src/app/services/forum.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { environment } from \"src/environment/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ConnectionService } from \"src/app/services/connection.service\";\n\n@Component({\n  selector: \"app-forum\",\n  templateUrl: \"./forum.component.html\",\n  styleUrls: [\"./forum.component.css\"],\n})\nexport class ForumComponent implements OnInit {\n  url = environment.api_url + \"/publication\";\n  isLoggedIn!: boolean;\n\n  publications: any[] = [];\n\n  publicationForm: FormGroup = new FormGroup({\n    title: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\n    publication: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(10),\n    ]),\n  });\n\n  constructor(\n    private forumservice: ForumService,\n    private router: Router,\n    private toastr: ToastrService,\n    private http: HttpClient,\n    private connectionService: ConnectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.connectionService.isUserLoggedIn$.subscribe(\n      (loggedIn) => (this.isLoggedIn = loggedIn)\n    );\n\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/log\"]);\n    }\n\n    this.getPublications();\n  }\n\n  getPublications(): void {\n    this.http.get<any[]>(this.url).subscribe(\n      (publicationsWithUserInfo) => {\n        this.publications = publicationsWithUserInfo;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  submit() {\n    const value = this.publicationForm.value;\n    this.forumservice.poste(value).subscribe((res) => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Publication ajouté avec succès\", \"Succès\");\n      }\n      setTimeout(() => {\n        location.reload();\n      }, 1000);\n    });\n  }\n\n  showForm = false;\n  title = \"\";\n  publication = \"\";\n\n  submitForm(): void {\n    // Handle form submission\n    console.log(\"Title:\", this.title);\n    console.log(\"Publication:\", this.publication);\n\n    // Reset form values and hide the form\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n\n  cancelForm(): void {\n    // Reset form values and hide the form\n    this.title = \"\";\n    this.publication = \"\";\n    this.showForm = false;\n  }\n\n  selectedPublication: any = null;\n  openPopup(publication: any): void {\n    this.selectedPublication = publication;\n  }\n\n  closePopup(): void {\n    this.selectedPublication = null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}