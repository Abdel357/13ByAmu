{"ast":null,"code":"import { environment } from \"src/environment/environment\";\nimport { throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PaymentService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.api_url + \"/payment\";\n  }\n  confirmPayment(payment) {\n    const sessionData = JSON.parse(sessionStorage.getItem(\"sessionData\") || \"{}\");\n    if (sessionData && sessionData.idUser) {\n      payment.idUser = sessionData.idUser;\n      return this.http.post(this.url, payment);\n    } else {\n      return throwError(\"User not authenticated\");\n    }\n  }\n}\nPaymentService.ɵfac = function PaymentService_Factory(t) {\n  return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient));\n};\nPaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaymentService,\n  factory: PaymentService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["environment","throwError","PaymentService","constructor","http","url","api_url","confirmPayment","payment","sessionData","JSON","parse","sessionStorage","getItem","idUser","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Youssef EL-HAMRANI\\Desktop\\Node js\\NEW PFE\\project_pfe-frontend\\frontend\\src\\app\\services\\payment.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environment/environment\";\nimport { PaymentModel } from \"../models/payment.model\";\nimport { Observable } from \"rxjs\";\nimport { throwError } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentService {\n  url = environment.api_url + \"/payment\";\n\n  constructor(private http: HttpClient) {}\n\n  confirmPayment(payment: PaymentModel): Observable<any> {\n    const sessionData = JSON.parse(\n      sessionStorage.getItem(\"sessionData\") || \"{}\"\n    );\n    if (sessionData && sessionData.idUser) {\n      payment.idUser = sessionData.idUser;\n      return this.http.post(this.url, payment);\n    } else {\n      return throwError(\"User not authenticated\");\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;AAGzD,SAASC,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAGL,WAAW,CAACM,OAAO,GAAG,UAAU;EAEC;EAEvCC,cAAcA,CAACC,OAAqB;IAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAC5BC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAC9C;IACD,IAAIJ,WAAW,IAAIA,WAAW,CAACK,MAAM,EAAE;MACrCN,OAAO,CAACM,MAAM,GAAGL,WAAW,CAACK,MAAM;MACnC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,EAAEG,OAAO,CAAC;KACzC,MAAM;MACL,OAAOP,UAAU,CAAC,wBAAwB,CAAC;;EAE/C;;AAfWC,cAAc,C;mBAAdA,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdjB,cAAc,C;SAAdA,cAAc;EAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}