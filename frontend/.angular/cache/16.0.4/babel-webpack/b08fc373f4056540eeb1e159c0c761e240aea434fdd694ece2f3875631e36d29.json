{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { environment } from \"src/environment/environment\";\nlet MesreservationsComponent = class MesreservationsComponent {\n  constructor(connectionService, router, http, toastr) {\n    this.connectionService = connectionService;\n    this.router = router;\n    this.http = http;\n    this.toastr = toastr;\n    this.url = environment.api_url + \"/mesreservations\";\n    this.url_cancel = environment.api_url + \"/cancel\";\n    this.reservations = [];\n    this.selectedFilter = \"all\";\n  }\n  ngOnInit() {\n    this.connectionService.isUserLoggedIn$.subscribe(loggedIn => this.isLoggedIn = loggedIn);\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/accueil\"]);\n    }\n    this.getReservations();\n  }\n  getReservations() {\n    const sessionData = JSON.parse(sessionStorage.getItem(\"sessionData\") || \"{}\");\n    if (sessionData && sessionData.idUser) {\n      const options = {\n        params: {\n          idUser: sessionData.idUser\n        }\n      };\n      this.http.get(this.url, options).subscribe(reservationContents => {\n        this.reservations = reservationContents;\n        console.log(reservationContents);\n      }, error => {\n        console.error(error);\n      });\n    }\n  }\n  cancelReservation(idReservation) {\n    const payload = {\n      idReservation: idReservation\n    };\n    this.http.post(this.url_cancel, payload).subscribe(res => {\n      if (res.success) {\n        this.router.navigate([res.redirectUrl]);\n        this.toastr.success(\"Réservation annulée avec succès\", \"Succès\");\n        setTimeout(() => {\n          location.reload();\n        }, 1000);\n      }\n    });\n  }\n  isReservationExpired(dateReservation, startTime) {\n    const reservationDateTime = new Date(dateReservation + \" \" + startTime);\n    const currentDateTime = new Date();\n    return currentDateTime > reservationDateTime;\n  }\n  filteredReservations() {\n    if (this.selectedFilter === \"valide\") {\n      return this.reservations.filter(reservation => !reservation.isCanceled && !this.isReservationExpired(reservation.dateReservation, reservation.startTime));\n    } else if (this.selectedFilter === \"annule\") {\n      return this.reservations.filter(reservation => reservation.isCanceled === 1);\n    } else if (this.selectedFilter === \"passe\") {\n      return this.reservations.filter(reservation => this.isReservationExpired(reservation.dateReservation, reservation.startTime));\n    }\n    return this.reservations;\n  }\n};\nMesreservationsComponent = __decorate([Component({\n  selector: \"app-mesreservations\",\n  templateUrl: \"./mesreservations.component.html\",\n  styleUrls: [\"./mesreservations.component.css\"]\n})], MesreservationsComponent);\nexport { MesreservationsComponent };","map":{"version":3,"names":["Component","environment","MesreservationsComponent","constructor","connectionService","router","http","toastr","url","api_url","url_cancel","reservations","selectedFilter","ngOnInit","isUserLoggedIn$","subscribe","loggedIn","isLoggedIn","navigate","getReservations","sessionData","JSON","parse","sessionStorage","getItem","idUser","options","params","get","reservationContents","console","log","error","cancelReservation","idReservation","payload","post","res","success","redirectUrl","setTimeout","location","reload","isReservationExpired","dateReservation","startTime","reservationDateTime","Date","currentDateTime","filteredReservations","filter","reservation","isCanceled","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Youssef EL-HAMRANI\\Desktop\\Node js\\NEW PFE\\project_pfe-frontend\\frontend\\src\\app\\components\\mesreservations\\mesreservations.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ConnectionService } from \"src/app/services/connection.service\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"src/environment/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-mesreservations\",\n  templateUrl: \"./mesreservations.component.html\",\n  styleUrls: [\"./mesreservations.component.css\"],\n})\nexport class MesreservationsComponent implements OnInit {\n  isLoggedIn!: boolean;\n  url = environment.api_url + \"/mesreservations\";\n  url_cancel = environment.api_url + \"/cancel\";\n  reservations: any[] = [];\n\n  constructor(\n    private connectionService: ConnectionService,\n    private router: Router,\n    private http: HttpClient,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.connectionService.isUserLoggedIn$.subscribe(\n      (loggedIn) => (this.isLoggedIn = loggedIn)\n    );\n\n    if (this.isLoggedIn == false) {\n      this.router.navigate([\"/accueil\"]);\n    }\n    this.getReservations();\n  }\n\n  getReservations(): void {\n    const sessionData = JSON.parse(\n      sessionStorage.getItem(\"sessionData\") || \"{}\"\n    );\n    if (sessionData && sessionData.idUser) {\n      const options = { params: { idUser: sessionData.idUser } };\n      this.http.get<any[]>(this.url, options).subscribe(\n        (reservationContents) => {\n          this.reservations = reservationContents;\n          console.log(reservationContents);\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    }\n  }\n\n  cancelReservation(idReservation: string) {\n    const payload = {\n      idReservation: idReservation,\n    };\n\n    this.http\n      .post<{ success: boolean; redirectUrl: string }>(this.url_cancel, payload)\n      .subscribe((res) => {\n        if (res.success) {\n          this.router.navigate([res.redirectUrl]);\n          this.toastr.success(\"Réservation annulée avec succès\", \"Succès\");\n\n          setTimeout(() => {\n            location.reload();\n          }, 1000);\n        }\n      });\n  }\n\n  isReservationExpired(dateReservation: string, startTime: string): boolean {\n    const reservationDateTime = new Date(dateReservation + \" \" + startTime);\n    const currentDateTime = new Date();\n\n    return currentDateTime > reservationDateTime;\n  }\n\n  selectedFilter: string = \"all\";\n\n  filteredReservations() {\n    if (this.selectedFilter === \"valide\") {\n      return this.reservations.filter(\n        (reservation) =>\n          !reservation.isCanceled &&\n          !this.isReservationExpired(\n            reservation.dateReservation,\n            reservation.startTime\n          )\n      );\n    } else if (this.selectedFilter === \"annule\") {\n      return this.reservations.filter(\n        (reservation) => reservation.isCanceled === 1\n      );\n    } else if (this.selectedFilter === \"passe\") {\n      return this.reservations.filter((reservation) =>\n        this.isReservationExpired(\n          reservation.dateReservation,\n          reservation.startTime\n        )\n      );\n    }\n    return this.reservations;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}