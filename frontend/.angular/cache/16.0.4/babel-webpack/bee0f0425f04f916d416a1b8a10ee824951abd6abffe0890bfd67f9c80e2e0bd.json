{"ast":null,"code":"import { environment } from \"src/environment/environment\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { first, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nexport class ConnectionService {\n  checkConnectSidCookie() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    }\n    return false;\n  }\n  constructor(http, router, toastr) {\n    this.http = http;\n    this.router = router;\n    this.toastr = toastr;\n    this.url = environment.api_url + \"/login\";\n    this.isUserLoggedIn$ = new BehaviorSubject(this.checkConnectSidCookie());\n    this.urlLogOut = environment.api_url + \"/logout\";\n  }\n  login(connection) {\n    return this.http.post(this.url, connection, {\n      withCredentials: true\n    }).pipe(first(), tap(res => {\n      if (res.success && res.token) {\n        localStorage.setItem(\"token\", res.token);\n        this.isUserLoggedIn$.next(true);\n      }\n    }));\n  }\n  setSessionData(sessionData) {\n    sessionStorage.setItem(\"sessionData\", JSON.stringify(sessionData));\n  }\n  logout() {\n    this.http.post(this.urlLogOut, null, {\n      withCredentials: true\n    }).subscribe(() => {\n      this.router.navigate([\"/accueil\"]);\n      this.toastr.success(\"Déconnexion réussie!\", \"Succès\");\n    }, error => {\n      console.log(\"Logout error:\", error);\n    });\n    localStorage.removeItem(\"token\");\n    this.setSessionData(null);\n    this.isUserLoggedIn$.next(false);\n  }\n}\nConnectionService.ɵfac = function ConnectionService_Factory(t) {\n  return new (t || ConnectionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService));\n};\nConnectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConnectionService,\n  factory: ConnectionService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["environment","BehaviorSubject","first","tap","ConnectionService","checkConnectSidCookie","token","localStorage","getItem","constructor","http","router","toastr","url","api_url","isUserLoggedIn$","urlLogOut","login","connection","post","withCredentials","pipe","res","success","setItem","next","setSessionData","sessionData","sessionStorage","JSON","stringify","logout","subscribe","navigate","error","console","log","removeItem","i0","ɵɵinject","i1","HttpClient","i2","Router","i3","ToastrService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\33763\\Desktop\\web\\project_pfe-1\\frontend\\src\\app\\services\\connection.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environment/environment\";\r\nimport { ConnectionModel } from \"../models/connection.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { first, tap } from \"rxjs/operators\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ConnectionService {\r\n  url = environment.api_url + \"/login\";\r\n\r\n  isUserLoggedIn$ = new BehaviorSubject<boolean>(this.checkConnectSidCookie());\r\n\r\n  private checkConnectSidCookie(): boolean {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  login(connection: ConnectionModel): Observable<any> {\r\n    return this.http.post(this.url, connection, { withCredentials: true }).pipe(\r\n      first(),\r\n      tap((res: any) => {\r\n        if (res.success && res.token) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          this.isUserLoggedIn$.next(true);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  setSessionData(sessionData: any) {\r\n    sessionStorage.setItem(\"sessionData\", JSON.stringify(sessionData));\r\n  }\r\n\r\n  urlLogOut = environment.api_url + \"/logout\";\r\n\r\n  logout() {\r\n    this.http.post(this.urlLogOut, null, { withCredentials: true }).subscribe(\r\n      () => {\r\n        this.router.navigate([\"/accueil\"]);\r\n        this.toastr.success(\"Déconnexion réussie!\", \"Succès\");\r\n      },\r\n      (error) => {\r\n        console.log(\"Logout error:\", error);\r\n      }\r\n    );\r\n\r\n    localStorage.removeItem(\"token\");\r\n    this.setSessionData(null);\r\n    this.isUserLoggedIn$.next(false);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;AAGzD,SAAqBC,eAAe,QAAQ,MAAM;AAClD,SAASC,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;;;;;AAM3C,OAAM,MAAOC,iBAAiB;EAKpBC,qBAAqBA,CAAA;IAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAG,YACUC,IAAgB,EAChBC,MAAc,EACdC,MAAqB;IAFrB,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IAfhB,KAAAC,GAAG,GAAGb,WAAW,CAACc,OAAO,GAAG,QAAQ;IAEpC,KAAAC,eAAe,GAAG,IAAId,eAAe,CAAU,IAAI,CAACI,qBAAqB,EAAE,CAAC;IAgC5E,KAAAW,SAAS,GAAGhB,WAAW,CAACc,OAAO,GAAG,SAAS;EAlBxC;EAEHG,KAAKA,CAACC,UAA2B;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACN,GAAG,EAAEK,UAAU,EAAE;MAAEE,eAAe,EAAE;IAAI,CAAE,CAAC,CAACC,IAAI,CACzEnB,KAAK,EAAE,EACPC,GAAG,CAAEmB,GAAQ,IAAI;MACf,IAAIA,GAAG,CAACC,OAAO,IAAID,GAAG,CAAChB,KAAK,EAAE;QAC5BC,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEF,GAAG,CAAChB,KAAK,CAAC;QACxC,IAAI,CAACS,eAAe,CAACU,IAAI,CAAC,IAAI,CAAC;;IAEnC,CAAC,CAAC,CACH;EACH;EAEAC,cAAcA,CAACC,WAAgB;IAC7BC,cAAc,CAACJ,OAAO,CAAC,aAAa,EAAEK,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC,CAAC;EACpE;EAIAI,MAAMA,CAAA;IACJ,IAAI,CAACrB,IAAI,CAACS,IAAI,CAAC,IAAI,CAACH,SAAS,EAAE,IAAI,EAAE;MAAEI,eAAe,EAAE;IAAI,CAAE,CAAC,CAACY,SAAS,CACvE,MAAK;MACH,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MAClC,IAAI,CAACrB,MAAM,CAACW,OAAO,CAAC,sBAAsB,EAAE,QAAQ,CAAC;IACvD,CAAC,EACAW,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;IACrC,CAAC,CACF;IAED3B,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACX,cAAc,CAAC,IAAI,CAAC;IACzB,IAAI,CAACX,eAAe,CAACU,IAAI,CAAC,KAAK,CAAC;EAClC;;AAnDWrB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,aAAA;AAAA;AAAjBzC,iBAAiB,C;SAAjBA,iBAAiB;EAAA0C,OAAA,EAAjB1C,iBAAiB,CAAA2C,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}